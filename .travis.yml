jobs:
  allow_failures:
    - stage: "Tests"
      language: rust
      os: windows
      rust: stable

  include:
    - stage: "Tests"
      language: rust
      cache: cargo
      dist: xenial
      sudo: true
      os: linux
      rust: stable

      addons:
        apt:
          packages:
            - libcurl4-openssl-dev
            - libelf-dev
            - libdw-dev
            - cmake
            - gcc
            - binutils-dev

      before_script:
        - |
            if [[ "$TRAVIS_RUST_VERSION" == "nightly" ]]; then
              ( ( cargo install clippy && export CLIPPY=true ) || export CLIPPY=false );
            fi
        - export PATH=$PATH:~/.cargo/bin

      script:
        - cargo build
        - cargo test --all

      after_success:
        - |
            if [[ "$TRAVIS_RUST_VERSION" == "stable" ]]; then
              wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
              tar xzf master.tar.gz &&
              cd kcov-master &&
              mkdir build &&
              cd build &&
              cmake .. &&
              make &&
              sudo make install &&
              cd ../.. &&
              rm -rf kcov-master &&
              for file in target/debug/kuzzle_sdk-*[^\.d]; do mkdir -p "target/cov/$(basename $file)"; kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
              bash <(curl -s https://codecov.io/bash) &&
              echo "Uploaded code coverage"
            fi

    - stage: "Tests"
      language: rust
      cache: cargo
      dist: xenial
      sudo: true
      os: linux
      rust: beta

      before_script:
        - export PATH=$PATH:~/.cargo/bin

      script:
        - cargo build
        - cargo test --all

    - stage: "Tests"
      language: rust
      cache: cargo
      dist: xenial
      sudo: true
      os: linux
      rust: nightly

      before_script:
        - |
            if [[ "$TRAVIS_RUST_VERSION" == "nightly" ]]; then
              ( ( cargo install clippy && export CLIPPY=true ) || export CLIPPY=false );
            fi
        - export PATH=$PATH:~/.cargo/bin

      script:
        - cargo build
        - cargo test --all

    - stage: "Tests"
      language: rust
      cache: cargo
      sudo: true
      os: osx
      rust: stable

      before_script:
        - export PATH=$PATH:~/.cargo/bin

      script:
        - cargo build
        - cargo test --all

    - stage: "Tests"
      allow_failures: true
      rust: stable
      language: rust
      cache: cargo
      sudo: true
      os: windows 
      rust: stable

      before_script:
        - export PATH=$PATH:~/.cargo/bin

      script:
        - cargo build
        - cargo test --all





